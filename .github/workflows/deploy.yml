name: Build and Publish Docker Image

on:
    push:
        branches:
            - develop
            - master

env:
    REGISTRY: ghcr.io

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        name: ${{ matrix.image.name }}
        continue-on-error: true
        permissions:
            contents: read
            packages: write
        strategy:
          fail-fast: false
          matrix:
            image:
              - { name: realm, BUILD_REALM: "TRUE", BUILD_WORLD: "FALSE"}
              - { name: world, BUILD_REALM: "FALSE", BUILD_WORLD: "TRUE"}
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Set Docker tag
              id: docker-tag
              run: |
                  if [[ "${{ github.ref_name }}" == "master" ]]; then
                    echo "TAG=latest" >> $GITHUB_ENV
                    echo "SERVER_IP=${{ vars.ORG_SERVER_IP }}" >> $GITHUB_ENV
                  else
                    echo "TAG=test" >> $GITHUB_ENV
                    echo "SERVER_IP=${{ vars.ORG_TEST_SERVER_IP }}" >> $GITHUB_ENV
                  fi

            - name: Extract REPO_NAME
              run: |
                  REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
                  echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

            - name: Cache Docker layers
              id: cache-docker
              uses: actions/cache@v3
              continue-on-error: true
              with:
                  path: ~/.cache/docker
                  key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
                  restore-keys: |
                      ${{ runner.os }}-docker-

            - name: Build Docker image
              run: |
                  docker build \
                    -t ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name }}:${{ env.TAG }} \
                    --target ${{ matrix.image.name }} \
                    --build-arg BUILD_WORLD=${{matrix.image.BUILD_WORLD}} \
                    --build-arg BUILD_REALM==${{matrix.image.BUILD_REALM}} \
                    .

            - name: Push Docker image
              run: |
                  docker push ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:${{ env.TAG }}

            - name: Push "latest" tag (main only)
              if: github.ref_name == 'master'
              run: |
                  docker tag ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:${{ env.TAG }} ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:latest
                  docker push ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:latest

            - name: Push Git tag as Docker tag (main only)
              if: github.ref_name == 'master' && startsWith(github.event.head_commit.message, 'tag:')
              run: |
                  GIT_TAG=$(echo "${{ github.event.head_commit.message }}" | grep -o 'tag:[^ ]*' | cut -d: -f2)
                  docker tag ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:latest ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:$GIT_TAG
                  docker push ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:$GIT_TAG

            - name: Deploy to Dokku
              uses: dokku/github-action@master
              with:
                  git_remote_url: "ssh://dokku@${{ env.SERVER_IP }}/${{ matrix.image.name  }}"
                  ssh_private_key: ${{ secrets.ORG_SSH_PRIVATE_KEY }}
                  deploy_docker_image: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name  }}:${{ env.TAG }}
