name: Build, Publish, and Deploy Docker Images

on:
  push:
    tags:
      - '*'

env:
  REGISTRY: ghcr.io
  SERVER_IP: ${{ vars.ORG_SERVER_IP }}
  TEST_SERVER_IP: ${{ vars.ORG_TEST_SERVER_IP }}
  SSH_PRIVATE_KEY_BASE64: ${{ secrets.ORG_SSH_PRIVATE_KEY_BASE64 }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    name: Build and Publish ${{ matrix.image.name }}
    strategy:
      matrix: 
          image:
            - name: realm
              build_realm: "TRUE"
              build_world: "FALSE"
            #- name: world
            #  build_realm: "FALSE"
            #  build_world: "TRUE"
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tag
        run: |
            echo "TAG=${{ github.ref_name}}" >> $GITHUB_ENV

      - name: Extract REPO_NAME
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name }}:${{ env.TAG }} \
            --target ${{ matrix.image.name }} \
            --build-arg BUILD_WORLD=${{ matrix.image.build_world }} \
            --build-arg BUILD_REALM=${{ matrix.image.build_realm }} \
            .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.image.name }}:${{ env.TAG }}

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    name: Deploy ${{ matrix.image.name }}
    permissions:
      contents: read
      packages: read

    strategy:
      matrix: 
          image:
            - name: realm
            #- name: world
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract info
        
        run: |
            REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f1 | tr '[:upper:]' '[:lower:]')
            BRANCH=$(git branch -r --contains ${{ github.ref }} --format "%(refname:lstrip=3)") 
            if [[ $BRANCH == "master" ]]; then
              echo "SERVER_IP=${{ env.SERVER_IP }}" >> $GITHUB_ENV
            else
              echo "SERVER_IP=${{ env.TEST_SERVER_IP }}" >> $GITHUB_ENV
            fi
            echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
      - name: Set up SSH
        id: setup-ssh
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          chmod 600 ~/.ssh/config
      - name: Deploy to Dokku
        run: |
          ssh dokku@${{ env.SERVER_IP }} apps:create ${{ matrix.image.name }} || true
          ssh dokku@${{ env.SERVER_IP }} docker-options:add ${{ matrix.image.name }} deploy "--restart always"
          ssh dokku@${{ env.SERVER_IP }} git:from-image --force-rebuild ${{ matrix.image.name }} ghcr.io/${{ env.REPO_NAME }}/${{ matrix.image.name }}:${{ github.ref_name }}
          ssh dokku@${{ env.SERVER_IP }} ps:restart ${{ matrix.image.name }}


