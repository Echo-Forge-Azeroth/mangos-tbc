name: Build, Publish, and Deploy Docker Images

on:
  push:
    branches:
      - develop
      - master

env:
  REGISTRY: ghcr.io

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
            echo '{"include": [
              {"name": "realm", "BUILD_REALM": "TRUE", "BUILD_WORLD": "FALSE"},
              {"name": "world", "BUILD_REALM": "FALSE", "BUILD_WORLD": "TRUE"}
            ]}' > matrix.json
            echo "matrix=$(cat matrix.json | jq -Rs .)" >> $GITHUB_OUTPUT

  build-and-publish:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix).include }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tag
        run: |
          if [[ "${{ github.ref_name }}" == "master" ]]; then
            echo "TAG=latest" >> $GITHUB_ENV
          else
            echo "TAG=test" >> $GITHUB_ENV
          fi

      - name: Extract REPO_NAME
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.name }}:${{ env.TAG }} \
            --target ${{ matrix.name }} \
            --build-arg BUILD_WORLD=${{ matrix.BUILD_WORLD }} \
            --build-arg BUILD_REALM=${{ matrix.BUILD_REALM }} \
            .

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.name }}:${{ env.TAG }}

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Dokku
        run: |
          MATRIX=$(cat $GITHUB_ENV | grep '^matrix=' | cut -d'=' -f2-)
          for row in $(echo "$MATRIX" | jq -c '.include[]'); do
            IMAGE_NAME=$(echo "$row" | jq -r '.name')
            if [[ "${{ github.ref_name }}" == "master" ]]; then
              SERVER_IP=${{ vars.ORG_SERVER_IP }}
            else
              SERVER_IP=${{ vars.ORG_TEST_SERVER_IP }}
            fi
            docker pull ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/$IMAGE_NAME:${{ env.TAG }}
            ssh dokku@${SERVER_IP} apps:destroy --force $IMAGE_NAME || true
            ssh dokku@${SERVER_IP} apps:create $IMAGE_NAME
            ssh dokku@${SERVER_IP} docker-options:add $IMAGE_NAME deploy "--restart always"
            ssh dokku@${SERVER_IP} tags:set $IMAGE_NAME ${{ env.TAG }}
          done
